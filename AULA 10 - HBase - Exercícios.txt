
AULA 10 - HBASe - Exercícios

#listar as tabelas:
list

#Estrutura da tabela:
describe 'nome_tbl'

#deletar tabela:
drop 'nome_tabela'

#Verificar se a tabela existe:
exists 'Nome_Tabela'

#Criando tabela:
create 'controle', {NAME=>'produto'},{NAME=>'fornecedor'}

# Inserir dados:
put 'NomeTabela','chave','familia:coluna','valor'
EX: put 'controle','1','produto:nome','ram'

#consultar tabela:

#TABELA INTEIRA:
scan 'NomeTabela'

# Contar o numero de registros da tabela:
count 'controle'


#Alterar a familia de coluna da tabela:
alter nomeTabela ’, {NAME=>’família’, VERSIONS=>Nº


---------------------------------------------------------------------
1. Criar a tabela ‘controle’ com os dados:

# Chave: id
# Família de Coluna: produto e fornecedor
#TABELA: controle
#familia: produto, fornecedor

# COMANDOS:

create 'controle', {NAME=>'produto'},{NAME=>'fornecedor'}
put 'controle','1','produto:nome','ram'

ROW                             COLUMN+CELL
 1                              column=fornecedor:estado, timestamp=1618070297758, value=SP
 1                              column=fornecedor:nome, timestamp=1618070248244, value=TI Comp
 1                              column=produto:nome, timestamp=1618069677732, value=ram
 1                              column=produto:qtd, timestamp=1618070077792, value=100
 2                              column=fornecedor:estado, timestamp=1618070310850, value=MG
 2                              column=fornecedor:nome, timestamp=1618070261621, value=Pe\xC3\xA7as PC
 2                              column=produto:nome, timestamp=1618069699323, value=hd
 2                              column=produto:qtd, timestamp=1618070086938, value=50
 3                              column=fornecedor:estado, timestamp=1618070321735, value=RJ
 3                              column=fornecedor:nome, timestamp=1618070274124, value=Inf Tec
 3                              column=produto:nome, timestamp=1618069706667, value=mouse
 3                              column=produto:qtd, timestamp=1618070094733, value=150

---------------------------------------------------------------------
2. Listar as tabelas e verificar a estrutura da tabela ‘controle’
hbase(main):028:0> list 'controle'
TABLE
controle
1 row(s) in 0.0100 seconds

hbase(main):040:0* describe 'controle'
Table controle is ENABLED
controle
COLUMN FAMILIES DESCRIPTION
{NAME => 'fornecedor', BLOOMFILTER => 'ROW', VERSIONS => '1', IN_MEMORY => 'false', KEEP_DELETED_CELLS => 'FALSE', DATA_
BLOCK_ENCODING => 'NONE', TTL => 'FOREVER', COMPRESSION => 'NONE', MIN_VERSIONS => '0', BLOCKCACHE => 'true', BLOCKSIZE
=> '65536', REPLICATION_SCOPE => '0'}
{NAME => 'produto', BLOOMFILTER => 'ROW', VERSIONS => '1', IN_MEMORY => 'false', KEEP_DELETED_CELLS => 'FALSE', DATA_BLO
CK_ENCODING => 'NONE', TTL => 'FOREVER', COMPRESSION => 'NONE', MIN_VERSIONS => '0', BLOCKCACHE => 'true', BLOCKSIZE =>
'65536', REPLICATION_SCOPE => '0'}
2 row(s) in 0.0240 seconds

---------------------------------------------------------------------
3. Contar o número de registros da tabela ‘controle’
hbase(main):041:0> cont 'controle'
3 row(s) in 0.0400 seconds

=> 3

---------------------------------------------------------------------
4. Alterar  a família de coluna produto para 3 versões
# COMANDO: alter 'controle',{NAME=>'produto',VERSIONS=>3}

hbase(main):049:0> alter 'controle',{NAME=>'produto',VERSIONS=>3}
Updating all regions with the new schema...
1/1 regions updated.
Done.
0 row(s) in 1.9620 seconds

hbase(main):050:0> describe 'controle'
Table controle is ENABLED
controle
COLUMN FAMILIES DESCRIPTION
{NAME => 'fornecedor', BLOOMFILTER => 'ROW', VERSIONS => '1', IN_MEMORY => 'false', KEEP_DELETED_CELLS => 'FALSE', DATA_BLOCK_ENCODING => 'NONE', TTL => 'FOREVER', COMPRESSION => 'NONE', MIN_VERSIONS => '0', BLO
CKCACHE => 'true', BLOCKSIZE => '65536', REPLICATION_SCOPE => '0'}
{NAME => 'produto', BLOOMFILTER => 'ROW', VERSIONS => '3', IN_MEMORY => 'false', KEEP_DELETED_CELLS => 'FALSE', DATA_BLOCK_ENCODING => 'NONE', TTL => 'FOREVER', COMPRESSION => 'NONE', MIN_VERSIONS => '0', BLOCKC
ACHE => 'true', BLOCKSIZE => '65536', REPLICATION_SCOPE => '0'}

---------------------------------------------------------------------
5. Alterar a quantidade para 200 do id 2
put 'controle','2','produto:qtd','200'

hbase(main):053:0> put 'controle','2','produto:qtd','200'
0 row(s) in 0.0080 seconds

 2 column=produto:qtd, timestamp=1618072299739, value=200

---------------------------------------------------------------------
6. Pesquisar as versões do id 2  da coluna quantidade
#valor da chave: 2

# get 'controle','2',{COLUMNS=>'produto:qtd', VERSIONS=>2}

hbase(main):057:0> get 'controle','2',{COLUMNS=>'produto:qtd', VERSIONS=>2}
COLUMN                          CELL
 produto:qtd                    timestamp=1618072299739, value=200
 produto:qtd                    timestamp=1618070086938, value=50
2 row(s) in 0.0430 seconds

---------------------------------------------------------------------
7. Excluir os id do estado de SP

hbase(main):062:0> deleteall 'controle','1'
0 row(s) in 0.0350 seconds

hbase(main):063:0> deleteall 'controle','3'
0 row(s) in 0.0040 seconds

---------------------------------------------------------------------
8. Deletar a coluna estado da chave 2
hbase(main):066:0* delete 'controle','2','fornecedor:estado'
0 row(s) in 0.0090 seconds

---------------------------------------------------------------------
9. Pesquisar toda a tabela controle
hbase(main):067:0> scan 'controle'
ROW                             COLUMN+CELL
 2                              column=fornecedor:nome, timestamp=1618070261621, value=Pe\xC3\xA7as PC
 2                              column=produto:nome, timestamp=1618069699323, value=hd
 2                              column=produto:qtd, timestamp=1618072741972, value=90
1 row(s) in 0.0140 seconds

---------------------------------------------------------------------