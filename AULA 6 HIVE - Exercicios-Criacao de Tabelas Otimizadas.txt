
* AULA 6 HIVE - Exercícios - Criação de Tabelas Otimizadas *

--------------------------------------------------------------
1. Usar o banco de dados maoshie

0: jdbc:hive2://localhost:10000> use maoshie;
No rows affected (0.06 seconds)

--------------------------------------------------------------
2. Selecionar os 10 primeiros registros da tabela pop

0: jdbc:hive2://localhost:10000> select * from pop limit 10;
+---------------+-----------------------+-----------------+------------------+--------------------+-----------------------+-----------------------------+
| pop.zip_code  | pop.total_population  | pop.median_age  | pop.total_males  | pop.total_females  | pop.total_households  | pop.average_household_size  |
+---------------+-----------------------+-----------------+------------------+--------------------+-----------------------+-----------------------------+
| 91371         | 1                     | 73.5            | 0                | 1                  | 1                     | 1.0                         |
| 90001         | 57110                 | 26.6            | 28468            | 28642              | 12971                 | 4.4                         |
| 90002         | 51223                 | 25.5            | 24876            | 26347              | 11731                 | 4.36                        |
| 90003         | 66266                 | 26.3            | 32631            | 33635              | 15642                 | 4.22                        |
| 90004         | 62180                 | 34.8            | 31302            | 30878              | 22547                 | 2.73                        |
| 90005         | 37681                 | 33.9            | 19299            | 18382              | 15044                 | 2.5                         |
| 90006         | 59185                 | 32.4            | 30254            | 28931              | 18617                 | 3.13                        |
| 90007         | 40920                 | 24.0            | 20915            | 20005              | 11944                 | 3.0                         |
| 90008         | 32327                 | 39.7            | 14477            | 17850              | 13841                 | 2.33                        |
| 90010         | 3800                  | 37.8            | 1874             | 1926               | 2014                  | 1.87                        |
+---------------+-----------------------+-----------------+------------------+--------------------+-----------------------+-----------------------------+
10 rows selected (2.416 seconds)

--------------------------------------------------------------
3. Criar a tabela pop_parquet no formato parquet para ler os dados da tabela pop
- stored as parquet;

zip_code int,
total_population int,
median_age float,
total_males int,
total_females int,
total_households int,
average_household_size float

0: jdbc:hive2://localhost:10000> desc pop_parquet;
+-------------------------+------------+----------+
|        col_name         | data_type  | comment  |
+-------------------------+------------+----------+
| zip_code                | int        |          |
| total_population        | int        |          |
| median_age              | float      |          |
| total_males             | int        |          |
| total_females           | int        |          |
| total_households        | int        |          |
| average_household_size  | float      |          |
+-------------------------+------------+----------+
7 rows selected (0.125 seconds)

--------------------------------------------------------------
4. Inserir os dados da tabela pop na pop_parquet

0: jdbc:hive2://localhost:10000> insert into pop_parquet select * from pop;
WARNING: Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
No rows affected (4.669 seconds)

--------------------------------------------------------------
5. Contar os registros da tabela pop_parquet

# pop_parquet
0: jdbc:hive2://localhost:10000> select count(*) from pop_parquet;
+------+
| _c0  |
+------+
| 319  |
+------+
1 row selected (0.564 seconds)

# pop
0: jdbc:hive2://localhost:10000> select count(*) from pop;
WARNING: Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
+------+
| _c0  |
+------+
| 319  |
+------+
1 row selected (2.875 seconds)

--------------------------------------------------------------
6. Selecionar os 10 primeiros registros da tabela pop_parquet

0: jdbc:hive2://localhost:10000> select * from pop_parquet limit 10;
+-----------------------+-------------------------------+-------------------------+--------------------------+----------------------------+-------------------------------+-------------------------------------+
| pop_parquet.zip_code  | pop_parquet.total_population  | pop_parquet.median_age  | pop_parquet.total_males  | pop_parquet.total_females  | pop_parquet.total_households  | pop_parquet.average_household_size  |
+-----------------------+-------------------------------+-------------------------+--------------------------+----------------------------+-------------------------------+-------------------------------------+
| 91371                 | 1                             | 73.5                    | 0                        | 1                          | 1                             | 1.0                                 |
| 90001                 | 57110                         | 26.6                    | 28468                    | 28642                      | 12971                         | 4.4                                 |
| 90002                 | 51223                         | 25.5                    | 24876                    | 26347                      | 11731                         | 4.36                                |
| 90003                 | 66266                         | 26.3                    | 32631                    | 33635                      | 15642                         | 4.22                                |
| 90004                 | 62180                         | 34.8                    | 31302                    | 30878                      | 22547                         | 2.73                                |
| 90005                 | 37681                         | 33.9                    | 19299                    | 18382                      | 15044                         | 2.5                                 |
| 90006                 | 59185                         | 32.4                    | 30254                    | 28931                      | 18617                         | 3.13                                |
| 90007                 | 40920                         | 24.0                    | 20915                    | 20005                      | 11944                         | 3.0                                 |
| 90008                 | 32327                         | 39.7                    | 14477                    | 17850                      | 13841                         | 2.33                                |
| 90010                 | 3800                          | 37.8                    | 1874                     | 1926                       | 2014                          | 1.87                                |
+-----------------------+-------------------------------+-------------------------+--------------------------+----------------------------+-------------------------------+-------------------------------------+
10 rows selected (0.627 seconds)

--------------------------------------------------------------
7. Criar a tabela pop_parquet_snappy no formato parquet com compressão Snappy 
para ler os dados da tabela pop;

0: jdbc:hive2://localhost:10000> create table pop_parquet_snappy(
. . . . . . . . . . . . . . . .>
. . . . . . . . . . . . . . . .> zip_code int,
. . . . . . . . . . . . . . . .> total_population int,
. . . . . . . . . . . . . . . .> median_age float,
. . . . . . . . . . . . . . . .> total_males int,
. . . . . . . . . . . . . . . .> total_females int,
. . . . . . . . . . . . . . . .> total_households int,
. . . . . . . . . . . . . . . .> average_household_size float
. . . . . . . . . . . . . . . .> )
. . . . . . . . . . . . . . . .> stored as parquet
. . . . . . . . . . . . . . . .> tblproperties('parquet.compress'='SNAPPY');
No rows affected (0.246 seconds)


--------------------------------------------------------------
8. Inserir os dados da tabela pop na pop_parquet_snappy

0: jdbc:hive2://localhost:10000> insert into pop_parquet_snappy select * from pop;
WARNING: Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
No rows affected (3.47 seconds)

--------------------------------------------------------------
9. Contar os registros da tabela pop_parquet_snappy

0: jdbc:hive2://localhost:10000> insert into pop_parquet_snappy select * from pop;
WARNING: Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.
No rows affected (3.47 seconds)
0: jdbc:hive2://localhost:10000> select count(*) from pop_parquet_snappy;
+------+
| _c0  |
+------+
| 319  |
+------+
1 row selected (0.309 seconds)

--------------------------------------------------------------
10. Selecionar os 10 primeiros registros da tabela pop_parquet_snappy

0: jdbc:hive2://localhost:10000> select * from pop_parquet_snappy limit 10;
+------------------------------+--------------------------------------+--------------------------------+---------------------------------+-----------------------------------+--------------------------------------+--------------------------------------------+
| pop_parquet_snappy.zip_code  | pop_parquet_snappy.total_population  | pop_parquet_snappy.median_age  | pop_parquet_snappy.total_males  | pop_parquet_snappy.total_females  | pop_parquet_snappy.total_households  | pop_parquet_snappy.average_household_size  |
+------------------------------+--------------------------------------+--------------------------------+---------------------------------+-----------------------------------+--------------------------------------+--------------------------------------------+
| 91371                        | 1                                    | 73.5                           | 0                               | 1                                 | 1                                    | 1.0                                        |
| 90001                        | 57110                                | 26.6                           | 28468                           | 28642                             | 12971                                | 4.4                                        |
| 90002                        | 51223                                | 25.5                           | 24876                           | 26347                             | 11731                                | 4.36                                       |
| 90003                        | 66266                                | 26.3                           | 32631                           | 33635                             | 15642                                | 4.22                                       |
| 90004                        | 62180                                | 34.8                           | 31302                           | 30878                             | 22547                                | 2.73                                       |
| 90005                        | 37681                                | 33.9                           | 19299                           | 18382                             | 15044                                | 2.5                                        |
| 90006                        | 59185                                | 32.4                           | 30254                           | 28931                             | 18617                                | 3.13                                       |
| 90007                        | 40920                                | 24.0                           | 20915                           | 20005                             | 11944                                | 3.0                                        |
| 90008                        | 32327                                | 39.7                           | 14477                           | 17850                             | 13841                                | 2.33                                       |
| 90010                        | 3800                                 | 37.8                           | 1874                            | 1926                              | 2014                                 | 1.87                                       |
+------------------------------+--------------------------------------+--------------------------------+---------------------------------+-----------------------------------+--------------------------------------+--------------------------------------------+
10 rows selected (0.263 seconds)

--------------------------------------------------------------
11. Comparar as tabelas pop, pop_parquet e pop_parquet_snappy no HDFS.

root@namenode:/# hdfs dfs -du -h /user/hive/warehouse/maoshie.db
11.9 K  /user/hive/warehouse/maoshie.db/pop
9.3 K   /user/hive/warehouse/maoshie.db/pop_parquet
9.3 K   /user/hive/warehouse/maoshie.db/pop_parquet_snappy

--------------------------------------------------------------

